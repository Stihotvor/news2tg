version: '3.9'
services:
  backend:
    build: .
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - chroma
  frontend:
    build: ./frontend
    command: python main.py
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    ports:
      - "8083:8080"
    depends_on:
      - backend
  celery:
    build: .
    command: celery -A backend.celery_worker worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
  celery-beat:
    build: .
    command: celery -A backend.celery_worker beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
  redis:
    image: redis:7
    ports:
      - "6379:6379"
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: newsbot
      POSTGRES_PASSWORD: newsbot
      POSTGRES_DB: newsbot
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/.chroma/index
  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080
    depends_on:
      - db
  test:
    build: .
    command: pytest --cov=backend --cov=frontend tests/
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
      - db
      
volumes:
  pgdata:
  chroma_data:
